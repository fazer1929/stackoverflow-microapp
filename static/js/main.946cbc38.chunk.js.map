{"version":3,"sources":["Components/ModalContent/ModalContent.module.css","Components/Home/Home.module.css","logo.svg","Components/Cards/Card.module.css","Components/Cards/Card.js","StateProvider.js","Components/ModalContent/ModalContent.js","Components/Home/Home.js","apiQuery.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["module","exports","Card","lastQuestion","id","title","link","tags","ownerName","profileImage","useState","onClick","className","styles","cardContainer","cardAvatar","cardAvatarImage","src","alt","cardAuthor","cardContent","cardHeading","cardContentTags","map","tag","i","key","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","ModalContent","itemId","onClose","items","item","container","cross","mainContent","modalHeader","modalImage","userName","modalContent","modalTitle","bodyTags","href","target","buttonLink","buttonClose","Home","pageNumber","dispatch","isModalVisible","setIsModalVisible","setId","loading","setLoading","useEffect","fetch","then","res","json","result","type","useApiQuery","document","addEventListener","handleScroll","console","log","Math","floor","body","scrollHeight","window","scrollY","innerHeight","page","closeModal","ida","mainContainer","isOpen","onRequestClose","App","Boolean","location","hostname","match","state","action","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.946cbc38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"ModalContent_mainContent__1PDew\",\"modalImage\":\"ModalContent_modalImage__DR_Dm\",\"userName\":\"ModalContent_userName__JHLPX\",\"buttonLink\":\"ModalContent_buttonLink__K6eVm\",\"buttonClose\":\"ModalContent_buttonClose__1FAqP\",\"modalContent\":\"ModalContent_modalContent__2KFeb\",\"modalTitle\":\"ModalContent_modalTitle__3nLcJ\",\"button\":\"ModalContent_button__LXT12\",\"cross\":\"ModalContent_cross__1MYbm\",\"tags\":\"ModalContent_tags__xYPIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Home_mainContainer__2I6GP\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Card_cardContainer__3wFPr\",\"cardAvatar\":\"Card_cardAvatar__34O3D\",\"cardAuthor\":\"Card_cardAuthor__2FmNf\",\"cardAvatarImage\":\"Card_cardAvatarImage__3hdEn\",\"cardContent\":\"Card_cardContent__ZBVFg\",\"cardHeading\":\"Card_cardHeading__3oP5a\",\"cardContentTags\":\"Card_cardContentTags__28vG7\",\"tag\":\"Card_tag__2p0wV\"};","import React, { useState } from 'react'\r\nimport styles from './Card.module.css'\r\n\r\nfunction Card({lastQuestion,id,link,title,tags,ownerName,profileImage}) {\r\n    const [pageNumber,setPageNumber] = useState(1)\r\n\r\n    const handleModal = () => {\r\n       console.log(lastQuestion)\r\n    }\r\n\r\n    return (\r\n        <div onClick={() => lastQuestion(id)} className={styles.cardContainer}>\r\n            <div className = {styles.cardAvatar}>\r\n                <img className={styles.cardAvatarImage} src={profileImage} alt=\"User Avatar\"/>\r\n                <div className={styles.cardAuthor}>{ownerName} </div>\r\n            </div>\r\n            <div className={styles.cardContent}>\r\n                <h3 className={styles.cardHeading}>Q. {title}</h3>\r\n                <div className={styles.cardContentTags}>\r\n                    {tags?.map((tag,i) => <span key={i} className={styles.tag}>{tag}</span>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, {createContext , useContext ,useReducer} from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\n//Wrap app and provide data layer\r\nexport const StateProvider = ({reducer , initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)} >\r\n    {children}\r\n    </StateContext.Provider>\r\n    );\r\n\r\n    //pull info from data layer\r\nexport const useStateValue = () => useContext(StateContext);","import React from 'react'\r\nimport styles from './ModalContent.module.css'\r\nimport {useStateValue} from '../../StateProvider'\r\nfunction ModalContent({itemId,onClose}) {\r\n    const[{items},dispatch] = useStateValue();\r\n    const item = items[itemId];\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.cross} onClick={onClose}>X</div>\r\n            <div className={styles.mainContent}>\r\n                <div className={styles.modalHeader}>\r\n                    <img className={styles.modalImage} src={item[\"owner\"][\"profile_image\"]} />\r\n                <div className={styles.userName}>{item[\"owner\"][\"display_name\"]}</div>\r\n                </div>\r\n\r\n                <div className={styles.modalContent}>\r\n                    <div className={styles.modalTitle}>Q. {item[\"title\"]}</div>\r\n                    <div className={styles.tags}><span className={styles.bodyTags}>Tags : </span>{item[\"tags\"]?.map((tag,i) => <span key={i} className={styles.tag}>{tag}</span>)}</div>\r\n                    <div className={styles.tags}> <span className={styles.bodyTags}>Answer Count : </span> {item[\"answer_count\"]}</div>\r\n                    <div className={styles.tags}><span className={styles.bodyTags}>View Count : </span>{item[\"view_count\"]}</div>   \r\n                </div>\r\n            <a href={item[\"link\"]} target=\"_blank\"> <button className={styles.buttonLink}>See the question</button> </a>\r\n            <button className={styles.buttonClose} onClick={onClose}>Close</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalContent\r\n","import React,{useEffect,useState} from 'react'\r\nimport Card from '../Cards/Card'\r\nimport styles from './Home.module.css'\r\nimport useApiQuery from '../../apiQuery'\r\nimport Modal from 'react-modal'\r\nimport ModalContent from '../ModalContent/ModalContent'\r\nimport {useStateValue} from '../../StateProvider'\r\n\r\nfunction Home() {\r\n    const[{items,pageNumber},dispatch] = useStateValue();\r\n    const[isModalVisible,setIsModalVisible]  = useState(false);\r\n    const[id,setId] = useState(0);\r\n    let{loading} = useApiQuery();\r\n \r\n    useEffect(() => {\r\n        document.addEventListener('scroll',handleScroll)\r\n    }, [])\r\n\r\n    const handleScroll=() =>{\r\n        console.log(Math.floor(document.body.scrollHeight - window.scrollY) , \"HI   \" +window.innerHeight)\r\n        if(Math.floor(document.body.scrollHeight - window.scrollY) ===  window.innerHeight ){\r\n            dispatch({\r\n                type:\"CHANGE_PAGE\",\r\n                page:pageNumber+1,\r\n            });\r\n        }\r\n    }\r\n    \r\n    const closeModal = ()=>{\r\n        setIsModalVisible(false)\r\n    }\r\n    const lastQuestion = (ida) =>{\r\n        setIsModalVisible(true)\r\n        setId(ida);\r\n    }\r\n    return (\r\n        <div className={styles.mainContainer}>\r\n            {items?.map((item,i) =>{ \r\n                return(\r\n                        <Card\r\n                            id={i}\r\n                            lastQuestion={lastQuestion}\r\n                            key={i}\r\n                            link = {item.link}\r\n                            title = {item.title}\r\n                            tags= {item.tags}\r\n                            ownerName = {item[\"owner\"][\"display_name\"]}\r\n                            profileImage = {item[\"owner\"][\"profile_image\"]}\r\n                        />\r\n                    )\r\n                \r\n        }\r\n            )}\r\n        \r\n        <Modal isOpen={isModalVisible} onRequestClose={closeModal}>\r\n            <ModalContent itemId={id} onClose={closeModal} />\r\n        </Modal>\r\n            \r\n        {loading?<h3>Loading....</h3>:\"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React,{useEffect,useState} from 'react'\r\nimport { useStateValue } from './StateProvider'\r\n\r\n\r\nexport default function useApiQuery() {\r\n    const[loading,setLoading] = useState(false);\r\n    const[{items,pageNumber},dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n    setLoading(true)\r\n    fetch(`https://api.stackexchange.com/2.2/questions?page=${pageNumber}&pagesize=30&order=desc&sort=hot&site=stackoverflow`)\r\n    .then(res =>res.json())\r\n    .then(result => {\r\n        dispatch({\r\n            type:\"ADD_ITEMS\",\r\n            item : [...items, ...result.items] \r\n        });\r\n        setLoading(false)\r\n    })\r\n    },[pageNumber])\r\n    return {loading};\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Components/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n    items:[],\r\n    pageNumber:1\r\n};\r\n\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    switch(action.type) {\r\n        case 'ADD_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: [...state.items, ...action.item]\r\n            };\r\n\r\n        case 'CHNAGE_PAGE':\r\n            return{\r\n                ...state,\r\n                pageNumber:action.page\r\n            }\r\n        default:\r\n            return  state\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer,{initialState} from './reducer'\nimport {StateProvider} from './StateProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider reducer={reducer}  initialState={initialState} > \n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}